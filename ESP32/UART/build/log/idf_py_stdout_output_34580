[1/9] Performing build step for 'bootloader'
[1/1] C:\Windows\system32\cmd.exe /C "cd /D D:\Private\Project\ESP32\UART\build\bootloader\esp-idf\esptool_py && D:\Espressif\python_env\idf5.4_py3.11_env\Scripts\python.exe D:/Espressif/frameworks/esp-idf-v5.4/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 D:/Private/Project/ESP32/UART/build/bootloader/bootloader.bin"
Bootloader binary size 0x5210 bytes. 0x2df0 bytes (36%) free.
[2/9] No install step for 'bootloader'
[3/9] Completed 'bootloader'
[4/9] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/uart.c.obj
[5/9] Linking C static library esp-idf\main\libmain.a
[6/9] Generating ld/sections.ld
[7/9] Linking CXX executable UART.elf
[8/9] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated D:/Private/Project/ESP32/UART/build/UART.bin
[9/9] C:\Windows\system32\cmd.exe /C "cd /D D:\Private\Project\ESP32\UART\build\esp-idf\esptool_py && D:\Espressif\python_env\idf5.4_py3.11_env\Scripts\python.exe D:/Espressif/frameworks/esp-idf-v5.4/components/partition_table/check_sizes.py --offset 0x8000 partition --type app D:/Private/Project/ESP32/UART/build/partition_table/partition-table.bin D:/Private/Project/ESP32/UART/build/UART.bin"
UART.bin binary size 0x3c7a0 bytes. Smallest app partition is 0x100000 bytes. 0xc3860 bytes (76%) free.
